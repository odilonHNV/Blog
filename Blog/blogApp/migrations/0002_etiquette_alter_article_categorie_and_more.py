# Generated by Django 5.1.5 on 2025-02-15 02:29
from django.db import migrations, models

def add_default_etiquettes(apps, schema_editor):
    Etiquette = apps.get_model('blogApp','Etiquette')
    etiquettes = [ 'Action', 'Eprouvante', 'Fantaisie', 'Fantastique', 'Horreur', 'Policier', 'Romance']
    for etiquette_name in etiquettes:
        Etiquette.objects.get_or_create(name=etiquette_name)
        """ get_or_create : Cette méthode vérifie si un enregistrement avec le champ name égal à etiquette_name existe déjà dans la base de données.
            Si l'enregistrement existe, il est simplement récupéré.
            Si l'enregistrement n'existe pas, il est créé.
            Cela garantit que les étiquettes par défaut sont ajoutées sans créer de doublons.
        """

class Migration(migrations.Migration):

    dependencies = [
        ('blogApp', '0001_initial'),
    ]

    operations = [
        # Création du modèle Etiquette
        migrations.CreateModel(
            name='Etiquette',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Nom')),
            ],
        ),
        # Modification du champ 'categorie' de l'article
        migrations.AlterField(
            model_name='article',
            name='categorie',
            field=models.CharField(choices=[('Film', 'Film'), ('Jeux-vidéo', 'Jeux-vidéo'), ('Livre', 'Livre')], max_length=30, verbose_name='Catégorie article'),
        ),
        # Modification du champ 'description' de l'article
        migrations.AlterField(
            model_name='article',
            name='description',
            field=models.CharField(max_length=1000, verbose_name='Description article'),
        ),
        # Suppression de l'ancien champ 'etiquette' (si nécessaire)
        migrations.RemoveField(
            model_name='article',
            name='etiquette',
        ),
        # Modification du champ 'slug' de l'article
        migrations.AlterField(
            model_name='article',
            name='slug',
            field=models.SlugField(blank=True, max_length=200, verbose_name='Slug'),
        ),
        # Modification du champ 'title' de l'article
        migrations.AlterField(
            model_name='article',
            name='title',
            field=models.CharField(max_length=50, verbose_name='Titre Article'),
        ),
        # Ajout du nouveau champ 'etiquette' en tant que ManyToManyField
        migrations.AddField(
            model_name='article',
            name='etiquette',
            field=models.ManyToManyField(blank=True, to='blogApp.etiquette', verbose_name='Etiquette(s) article'),
        ),
        # Exécution de la fonction pour ajouter les étiquettes par défaut
        migrations.RunPython(add_default_etiquettes),

    ]
